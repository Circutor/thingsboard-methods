// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ThingsBoardDeviceAPIControllerMock is an autogenerated mock type for the ThingsBoardDeviceAPIController type
type ThingsBoardDeviceAPIControllerMock struct {
	mock.Mock
}

// GetDeviceAttributes provides a mock function with given fields: deviceToken, query
func (_m *ThingsBoardDeviceAPIControllerMock) GetDeviceAttributes(deviceToken string, query map[string]interface{}) (int, map[string]interface{}, error) {
	ret := _m.Called(deviceToken, query)

	var r0 int
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) int); ok {
		r0 = rf(deviceToken, query)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 map[string]interface{}
	if rf, ok := ret.Get(1).(func(string, map[string]interface{}) map[string]interface{}); ok {
		r1 = rf(deviceToken, query)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(map[string]interface{})
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, map[string]interface{}) error); ok {
		r2 = rf(deviceToken, query)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// PostDeviceAttributes provides a mock function with given fields: deviceToken, attrBody
func (_m *ThingsBoardDeviceAPIControllerMock) PostDeviceAttributes(deviceToken string, attrBody interface{}) (int, map[string]interface{}, error) {
	ret := _m.Called(deviceToken, attrBody)

	var r0 int
	if rf, ok := ret.Get(0).(func(string, interface{}) int); ok {
		r0 = rf(deviceToken, attrBody)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 map[string]interface{}
	if rf, ok := ret.Get(1).(func(string, interface{}) map[string]interface{}); ok {
		r1 = rf(deviceToken, attrBody)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(map[string]interface{})
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, interface{}) error); ok {
		r2 = rf(deviceToken, attrBody)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// PostTelemetry provides a mock function with given fields: deviceToken, query
func (_m *ThingsBoardDeviceAPIControllerMock) PostTelemetry(deviceToken string, query map[string]interface{}) (int, map[string]interface{}, error) {
	ret := _m.Called(deviceToken, query)

	var r0 int
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) int); ok {
		r0 = rf(deviceToken, query)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 map[string]interface{}
	if rf, ok := ret.Get(1).(func(string, map[string]interface{}) map[string]interface{}); ok {
		r1 = rf(deviceToken, query)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(map[string]interface{})
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, map[string]interface{}) error); ok {
		r2 = rf(deviceToken, query)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
